{"version":3,"sources":["components/navigation.jsx","components/header.jsx","components/about.jsx","components/why.jsx","components/image.jsx","components/gallery.jsx","components/Team.jsx","App.jsx","serviceWorker.js","index.js"],"names":["Navigation","props","id","className","type","href","Header","data","paragraph","About","src","alt","paragraphs","map","par","Attributes","d","i","Attributes2","Why","Image","title","largeImage","smallImage","Gallery","Team","img","name","job","bio","App","SmoothScroll","speed","speedAsDuration","useState","landingPageData","setLandingPageData","useEffect","JsonData","Services","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.22b9ac68.chunk.js","sourcesContent":["export const Navigation = (props) => {\n  return (\n    <nav id='menu' className='navbar navbar-default navbar-fixed-top'>\n      <div className='container'>\n        <div className='navbar-header'>\n          <button\n            type='button'\n            className='navbar-toggle collapsed'\n            data-toggle='collapse'\n            data-target='#bs-example-navbar-collapse-1'\n          >\n            {' '}\n            <span className='sr-only'>Toggle navigation</span>{' '}\n            <span className='icon-bar'></span>{' '}\n            <span className='icon-bar'></span>{' '}\n            <span className='icon-bar'></span>{' '}\n          </button>\n          <a className='navbar-brand page-scroll' href='#page-top'>\n            Donkey Hole NFT\n          </a>{' '}\n          <div className=\"subhead\">The dumbest thing of all time</div>\n        </div>\n\n        <div\n          className='collapse navbar-collapse'\n          id='bs-example-navbar-collapse-1'\n        >\n          <ul className='nav navbar-nav navbar-right'>\n            <li>\n              <a href='#about' className='page-scroll'>\n                About\n              </a>\n            </li>\n            <li>\n              <a href='#why' className='page-scroll'>\n                Why?\n              </a>\n            </li>\n            <li>\n              <a href='#portfolio' className='page-scroll'>\n                Gallery\n              </a>\n            </li>\n            <li>\n              <a href='#team' className='page-scroll'>\n                Team\n              </a>\n            </li>\n            <li>\n              <a href='#discord' className='page-scroll'>\n                Discord\n              </a>\n            </li>\n            <li>\n              <a href='#insta' className='page-scroll'>\n                IG\n              </a>\n            </li>\n            <li>\n              <a href='#twitter' className='page-scroll'>\n                Twitter\n              </a>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  )\n}\n","export const Header = (props) => {\n  return (\n    <header id='header'>\n      <div className='intro'>\n        <div className='overlay'>\n          <div className='container'>\n            <div className='row'>             \n              <div className='col-md-8 col-md-offset-2 intro-text'>\n                <h1>\n                  {\"We are\"}\n                  <span></span>\n                </h1>\n                <h1>\n                  {\"Donkey Hole\"}\n                  <span></span>\n                </h1>\n                <p>{props.data ? props.data.paragraph : 'Loading'}</p>\n                <a\n                  href='#features'\n                  className='btn btn-custom btn-lg page-scroll'\n                >\n                  Join Discord\n                </a>{' '}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </header>\n  )\n}\n","export const About = (props) => {\n  return (\n    <div id=\"about\">\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-xs-12 col-md-6\">\n            {\" \"}\n            <img src=\"img/about.png\" className=\"img-responsive\" alt=\"\" />{\" \"}\n          </div>\n          <div className=\"col-xs-12 col-md-6\">\n            <div className=\"about-text\">\n              <h2>About Donkey Hole</h2>\n              {props.data ? props.data.paragraphs.map((par) => (\n                <p> {par} </p>\n              )) : \"loading\"}\n              <p>{props.data ? props.data.paragraph : \"loading...\"}</p>\n              <h3>Art Attributes</h3>\n              <div className=\"list-style\">\n                <div className=\"col-lg-6 col-sm-6 col-xs-12\">\n                  <ul>\n                    {props.data\n                      ? props.data.Attributes.map((d, i) => (\n                          <li key={`${d}-${i}`}>{d}</li>\n                        ))\n                      : \"loading\"}\n                  </ul>\n                </div>\n                <div className=\"col-lg-6 col-sm-6 col-xs-12\">\n                  <ul>\n                    {props.data\n                      ? props.data.Attributes2.map((d, i) => (\n                          <li key={`${d}-${i}`}> {d}</li>\n                        ))\n                      : \"loading\"}\n                  </ul>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","export const Why = (props) => {\n  return (\n    <div id='why' className='text-center'>\n      <div className='container'>\n        <div className='section-title'>\n          <h2>Why?</h2>\n          <p>\n            When the creators of Donkey Hole decided the time was right to create the dumbest thing that has ever existed, they each sat down and started sketching ideas. When they convened several minutes later to compare, they were shocked. They had both drawn nearly identical drawings. A bent over donkey, flashing his butthole.\n          </p>\n          <p>\n            But in hindsight, this isn't shocking at all. It all makes sense. Donkeys are objectively a funny animal, and buttholes are objectively a funny piece of anatomy. And what is the point of creating the dumbest thing that has ever existed in the history of human civilization other than to have a fun time. This project is meant to bring us back to childhood, back before the stresses of the world took all our joy away. To back when the epitome of joy was the feeling of pulling our pants down, using 10 fingers to pry open our butt cheeks, and exposing our bright young hole to a group of unsuspecting pedestrians from the window of a passing bus. \n          </p>\n        </div>\n      </div>\n    </div>\n  )\n}\n","export const Image = ({ title, largeImage, smallImage }) => {\n  return (\n    <div className='portfolio-item'>\n      <div className='hover-bg'>\n        {' '}\n        <a\n          href={largeImage}\n          title={title}\n          data-lightbox-gallery='gallery1'\n        >\n          <div className='hover-text'>\n            <h4>{title}</h4>\n          </div>\n          <img\n            src={smallImage}\n            className='img-responsive'\n            alt={title}\n          />{' '}\n        </a>{' '}\n      </div>\n    </div>\n  )\n}","import { Image } from \"./image\";\n\nexport const Gallery = (props) => {\n  return (\n    <div id='portfolio' className='text-center'>\n      <div className='container'>\n        <div className='section-title'>\n          <h2>Gallery</h2>\n          <p>\n            A few potential samples from the collection\n          </p>\n        </div>\n        <div className='row'>\n          <div className='portfolio-items'>\n            {props.data\n              ? props.data.map((d, i) => (\n                <div key={`${d.title}-${i}`} className='col-sm-6 col-md-4 col-lg-4'>\n                  <Image title={d.title} largeImage={d.largeImage} smallImage={d.smallImage} />\n                </div>\n              ))\n              : 'Loading...'}\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","export const Team = (props) => {\n  return (\n    <div id='team' className='text-center'>\n      <div className='container'>\n        <div className='col-md-8 col-md-offset-2 section-title'>\n          <h2>Meet the Team</h2>\n          <p>\n            Donkey Hole's team is surely an HR lawsuit waiting to happen. Fortunately we don't have an HR department.\n          </p>\n        </div>\n        <div id='row' className='img-panel'>\n          {props.data\n            ? props.data.map((d, i) => (\n                <div key={`${d.name}-${i}`} className='col-md-4 col-sm-6 team'>\n                  <div className='thumbnail'>\n                    {' '}\n                    <img src={d.img} alt='...' className='team-img' />\n                    <div className='caption'>\n                      <h4>{d.name}</h4>\n                      <p>{d.job}</p>\n                      <p>{d.bio}</p>\n                    </div>\n                  </div>\n                </div>\n              ))\n            : 'loading'}\n        </div>\n      </div>\n    </div>\n  )\n}\n","import { useState, useEffect } from \"react\";\nimport { Navigation } from \"./components/navigation\";\nimport { Header } from \"./components/header\";\nimport { Features } from \"./components/features\";\nimport { About } from \"./components/about\";\nimport { Why } from \"./components/why\";\nimport { Gallery } from \"./components/gallery\";\nimport { Testimonials } from \"./components/testimonials\";\nimport { Team } from \"./components/Team\";\nimport { Contact } from \"./components/contact\";\nimport JsonData from \"./data/data.json\";\nimport SmoothScroll from \"smooth-scroll\";\nimport \"./App.css\";\n\nexport const scroll = new SmoothScroll('a[href*=\"#\"]', {\n  speed: 1000,\n  speedAsDuration: true,\n});\n\nconst App = () => {\n  const [landingPageData, setLandingPageData] = useState({});\n  useEffect(() => {\n    setLandingPageData(JsonData);\n  }, []);\n\n  return (\n    <div>\n      <Navigation />\n      <Header data={landingPageData.Header} />\n      <About data={landingPageData.About} />\n      <Why data={landingPageData.Services} />\n      <Gallery data={landingPageData.Gallery}/>\n      <Team data={landingPageData.Team} />\n      {/* <Contact data={landingPageData.Contact} /> */}\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}